{"version":3,"file":"static/js/46.d7ef732d.chunk.js","mappings":"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","sources":["Pages/SignUpWithEmail/SignUpWithEmail.jsx","firebase.js","firestoreApi.js"],"sourcesContent":["import { Form, Button } from 'bootstrap-4-react';\r\nimport { useState } from 'react';\r\nimport { createUserWithEmailAndPassword } from 'firebase/auth';\r\nimport { Link } from 'react-router-dom';\r\nimport { auth } from '../../firebase';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { isUserExistEmail } from '../../firestoreApi';\r\nimport { toast } from 'react-hot-toast';\r\n\r\nconst SignUpWithEmail = () => {\r\nconst [data, setData] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n});\r\nconst navigate = useNavigate();\r\n\r\nconst hundleSubmit = (evt) => {\r\nevt.preventDefault();\r\nconst {email, password} = data;\r\ncreateUserWithEmailAndPassword(auth, email, password)\r\n.then(res => {\r\n    console.log(res.user);\r\n    isUserExistEmail(email, {email, password});\r\n    navigate('/users');\r\n    toast.success('Welcome to your CRM');\r\n})\r\n.catch(err => {\r\n  if(err.message === \"Firebase: Error (auth/email-already-in-use).\") {\r\n    toast.error(\"You already have an account, go to link below\")\r\n  }\r\n})\r\n};\r\n\r\n\r\nconst inputChange = (evt) => {\r\nconst inputs = {[evt.target.name] : evt.target.value};\r\nsetData({...data, ...inputs});\r\n};\r\n    return (\r\n        <>\r\n        <h1>Create your account</h1>\r\n        <Form onSubmit={hundleSubmit}>\r\n        <Form.Group>\r\n          <label htmlFor=\"exampleInputEmail1\">Email address</label>\r\n          <Form.Input onChange={inputChange} name=\"email\" type=\"email\" id=\"exampleInputEmail1\" placeholder=\"Enter email\" lg/>\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <label htmlFor=\"exampleInputPassword1\">Password</label>\r\n          <Form.Input onChange={inputChange} name=\"password\" type=\"password\" id=\"exampleInputPassword1\" placeholder=\"Password\" lg/>\r\n        </Form.Group>\r\n        \r\n       \r\n        <Button primary type=\"submit\">Sign Up</Button>\r\n        <Form.Text >Already have an account? <Link to='/sign-in-with-email'>Click here</Link></Form.Text>\r\n      </Form>\r\n      </>\r\n    )\r\n};\r\n\r\nexport default SignUpWithEmail;","import { initializeApp } from 'firebase/app';\r\nimport { GithubAuthProvider, GoogleAuthProvider, getAuth, FacebookAuthProvider } from 'firebase/auth';\r\nimport {getFirestore} from 'firebase/firestore';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyD9vfvfkZR7Jm1x7wNDIhh6PcfI19jMWJg\",\r\n    authDomain: \"crm-project-4aaef.firebaseapp.com\",\r\n    projectId: \"crm-project-4aaef\",\r\n    storageBucket: \"crm-project-4aaef.appspot.com\",\r\n    messagingSenderId: \"161287361864\",\r\n    appId: \"1:161287361864:web:19d90ee4a5cc4a927ecf7d\"\r\n  };\r\n  \r\nexport const app = initializeApp(firebaseConfig);\r\nexport const auth = getAuth(app);\r\nexport const db = getFirestore(app);\r\nexport const googleAuthProvider = new GoogleAuthProvider();\r\nexport const githubAuthProvider = new GithubAuthProvider();\r\nexport const facebookAuthProvider = new FacebookAuthProvider();\r\n\r\n","import { collection, addDoc, getDocs, query, where } from 'firebase/firestore';\r\nimport { db } from './firebase';\r\n\r\nconst database = collection(db, 'users');\r\n\r\n export const getData = async (setData) => {\r\nconst data = await getDocs(database);\r\n    setData(data.docs.map(item => {\r\n      return {...item.data(), id: item.id }\r\n    }));\r\n  };\r\n\r\n\r\n export const isUserExistEmail = async (email, data) => {\r\n    const q = query(database, where(\"email\", \"==\", email))\r\n    \r\n    const querySnapshot = await getDocs(q);\r\n    \r\n    \r\n    if (querySnapshot.empty) {\r\n        await addDoc(database, data);\r\n      } \r\n    }\r\n\r\n    export const isUserExistPhone = async (phoneNumber, data) => {\r\n        const q = query(database, where(\"phoneNumber\", \"==\",  phoneNumber))\r\n        \r\n        const querySnapshot = await getDocs(q);\r\n        \r\n        \r\n        if (querySnapshot.empty) {\r\n            console.log(\"Add user\");\r\n           \r\n            await addDoc(database, data);\r\n          }\r\n        }"],"names":["_useState","useState","email","password","_useState2","_slicedToArray","data","setData","navigate","useNavigate","inputChange","evt","inputs","_defineProperty","target","name","value","_objectSpread","_jsxs","_Fragment","children","_jsx","Form","onSubmit","preventDefault","createUserWithEmailAndPassword","auth","then","res","console","log","user","isUserExistEmail","toast","catch","err","message","htmlFor","onChange","type","id","placeholder","lg","Button","primary","Link","to","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","getAuth","db","getFirestore","googleAuthProvider","GoogleAuthProvider","githubAuthProvider","GithubAuthProvider","facebookAuthProvider","FacebookAuthProvider","database","collection","getData","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","getDocs","sent","docs","map","item","stop","_x","apply","arguments","_ref2","_callee2","q","_context2","query","where","empty","addDoc","_x2","_x3","isUserExistPhone","_ref3","_callee3","phoneNumber","_context3","_x4","_x5"],"sourceRoot":""}